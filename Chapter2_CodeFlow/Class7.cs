using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace CSharp_ProgramingStudy.Chapter2_CodeFlow
{
    /// <summary>
    /// for
    /// 목표: 정해진 횟수 동안 반복 실행하는 반복문을 사용한다.
    /// 
    /// for 반복문의 기본 구조는 다음과 같습니다:
    /// 1, 초기화 단계: 반복문이 시작될 때 한 번 실행되며, 
    /// 반복문의 제어 변수를 초기화합니다. 예제에서는 int i = 0;이 해당됩니다.
    ///
    /// 2, 조건식: 각 반복의 시작 전에 평가되며, 
    /// 이 조건이 참(true)인 동안 반복문은 계속 실행됩니다. 예제에서는 i < 5;가 해당됩니다.
    /// 
    /// 3, 반복 후 실행되는 식: 각 반복의 끝에 실행되며, 
    /// 주로 제어 변수의 값을 변경합니다. 예제에서는 i++가 해당됩니다.
    /// 
    /// 4, 반복될 코드 블록: 중괄호 {} 안에 위치하며, 
    /// 조건식이 참인 동안 반복해서 실행됩니다.
    ///
    /// for 반복문은 다음과 같은 상황에서 특히 유용합니다:
    /// - 배열이나 컬렉션의 모든 요소를 순회할 때
    /// - 정해진 횟수만큼 특정 작업을 반복할 때
    /// - 숫자를 증가시키거나 감소시키면서 반복할 작업을 수행할 때
    /// 
    /// for 반복문의 사용은 프로그래밍에서 반복적인 작업을 효율적으로 
    /// 처리하는 기본적인 방법 중 하나입니다. 
    /// 여러분도 이 예제를 직접 실행해보고, 
    /// 다양한 조건과 작업에 for 반복문을 활용해보세요.
    /// </summary>
    public class Class7
    {
        public void Run()
        {
            for (int i = 0; i < 5; i++)
            {
                Console.WriteLine($"i: {i}");
            }
        }
    }
}