using System;

namespace CSharp_ProgramingStudy.Chapter1_Data
{
    /// <summary>
    /// 부동 소수점 수의 표현과 float 데이터 타입의 사용법을 이해한다.
    /// 목표: 부동 소수점 수를 정확하게 표현하고 관리하는 방법을 배운다.
    /// 내용:
    /// - float 리터럴에는 f 접미사를 사용하여 해당 숫자가 float 타입임을 명시한다.
    /// - double 데이터 타입은 더 큰 범위와 정밀도를 가진 부동 소수점 수를 저장하는 데 사용되며, 
    /// 선택적으로 d 접미사를 사용할 수 있다.
    /// 
    /// 이 클래스는 float와 double의 사용 예를 제공하며, 
    /// 각각의 데이터 타입이 언제 사용되어야 하는지를 설명한다.
    /// 
    /// 부동 소수점 수의 표현과 사용법:
    /// 
    /// 부동 소수점 수(Floating-point numbers) : 
    /// 실수를 컴퓨터에서 근사적으로 표현하기 위한 방법입니다.
    /// 부동 소수점 수는 소수점의 위치가 고정되지 않고, 수의 범위와 정밀도에 따라 변할 수 있습니다.
    /// 
    /// float 데이터 타입: 32비트(4바이트)를 사용하여 실수를 표현합니다. 
    /// float 타입의 변수를 초기화할 때는 숫자 뒤에 f나 F 접미사를 붙여야 합니다. 
    /// float는 제한된 정밀도를 가지고 있으며, 대략 6~7자리의 십진수 정밀도를 제공합니다.
    /// 
    /// double 데이터 타입: 64비트(8바이트)를 사용하여 실수를 표현합니다. 
    /// double 타입은 float보다 더 넓은 범위와 정밀도를 제공하며, 대략 15~16자리의 십진수 정밀도를 가집니다. 
    /// double 타입의 리터럴에는 선택적으로 d나 D 접미사를 붙일 수 있습니다.
    /// </summary>
    public class Class_5
    {
        // float형 변수 선언과 초기화. 끝에 f를 붙여 float형임을 명시
        float myFloat = 5.75f;

        // double형 변수 선언과 초기화. 선택적으로 d를 붙여 double형임을 명시할 수 있음
        double myDouble = 2.333333333d;
    }
}
